augroup EventLoggin
  autocmd!
  autocmd BufNewFile * call LogEvent('BufNewFile')
  autocmd BufReadPre * call LogEvent('BufReadPre')
  autocmd BufRead * call LogEvent('BufRead')
  autocmd BufReadPost * call LogEvent('BufReadPost')
  autocmd BufReadCmd * call LogEvent('BufReadCmd')
  autocmd FileReadPre * call LogEvent('FileReadPre')
  autocmd FileReadPost * call LogEvent('FileReadPost')
  autocmd FileReadCmd * call LogEvent('FileReadCmd')
  autocmd FilterReadPre * call LogEvent('FilterReadPre')
  autocmd FilterReadPost * call LogEvent('FilterReadPost')
  autocmd StdinReadPre * call LogEvent('StdinReadPre')
  autocmd StdinReadPost * call LogEvent('StdinReadPost')
  autocmd BufWrite * call LogEvent('BufWrite')
  autocmd BufWritePre * call LogEvent('BufWritePre')
  autocmd BufWritePost * call LogEvent('BufWritePost')
  autocmd BufWriteCmd * call LogEvent('BufWriteCmd')
  autocmd FileWritePre * call LogEvent('FileWritePre')
  autocmd FileWritePost * call LogEvent('FileWritePost')
  autocmd FileWriteCmd * call LogEvent('FileWriteCmd')
  autocmd FileAppendPre * call LogEvent('FileAppendPre')
  autocmd FileAppendPost * call LogEvent('FileAppendPost')
  autocmd FileAppendCmd * call LogEvent('FileAppendCmd')
  autocmd FilterWritePre * call LogEvent('FilterWritePre')
  autocmd FilterWritePost * call LogEvent('FilterWritePost')
  autocmd BufAdd * call LogEvent('BufAdd')
  autocmd BufCreate * call LogEvent('BufCreate')
  autocmd BufDelete * call LogEvent('BufDelete')
  autocmd BufWipeout * call LogEvent('BufWipeout')
  autocmd BufFilePre * call LogEvent('BufFilePre')
  autocmd BufFilePost * call LogEvent('BufFilePost')
  autocmd BufEnter * call LogEvent('BufEnter')
  autocmd BufLeave * call LogEvent('BufLeave')
  autocmd BufWinEnter * call LogEvent('BufWinEnter')
  autocmd BufWinLeave * call LogEvent('BufWinLeave')
  autocmd BufUnload * call LogEvent('BufUnload')
  autocmd BufHidden * call LogEvent('BufHidden')
  autocmd BufNew * call LogEvent('BufNew')
  "autocmd SwapExists * call LogEvent('SwapExists')
  autocmd FileType * call LogEvent('FileType')
  autocmd Syntax * call LogEvent('Syntax')
  "autocmd EncodingChanged * call LogEvent('EncodingChanged')
  autocmd TermChanged * call LogEvent('TermChanged')
  autocmd VimEnter * call LogEvent('VimEnter')
  autocmd GUIEnter * call LogEvent('GUIEnter')
  autocmd GUIFailed * call LogEvent('GUIFailed')
  autocmd TermResponse * call LogEvent('TermResponse')
  autocmd QuitPre * call LogEvent('QuitPre')
  autocmd VimLeavePre * call LogEvent('VimLeavePre')
  autocmd VimLeave * call LogEvent('VimLeave')
  autocmd FileChangedShell * call LogEvent('FileChangedShell')
  autocmd FileChangedShellPost * call LogEvent('FileChangedShellPost')
  autocmd FileChangedRO * call LogEvent('FileChangedRO')
  autocmd ShellCmdPost * call LogEvent('ShellCmdPost')
  autocmd ShellFilterPost * call LogEvent('ShellFilterPost')
  autocmd FuncUndefined * call LogEvent('FuncUndefined')
  autocmd SpellFileMissing * call LogEvent('SpellFileMissing')
  autocmd SourcePre * call LogEvent('SourcePre')
  autocmd SourceCmd * call LogEvent('SourceCmd')
  autocmd VimResized * call LogEvent('VimResized')
  autocmd FocusGained * call LogEvent('FocusGained')
  autocmd FocusLost * call LogEvent('FocusLost')
  autocmd CursorHold * call LogEvent('CursorHold')
  "autocmd CursorHoldI * call LogEvent('CursorHoldI')
  "autocmd CursorMoved * call LogEvent('CursorMoved')
  "autocmd CursorMovedI * call LogEvent('CursorMovedI')
  autocmd WinEnter * call LogEvent('WinEnter')
  autocmd WinLeave * call LogEvent('WinLeave')
  autocmd TabEnter * call LogEvent('TabEnter')
  autocmd TabLeave * call LogEvent('TabLeave')
  autocmd CmdwinEnter * call LogEvent('CmdwinEnter')
  autocmd CmdwinLeave * call LogEvent('CmdwinLeave')
  autocmd InsertEnter * call LogEvent('InsertEnter')
  "autocmd InsertChange * call LogEvent('InsertChange')
  autocmd InsertLeave * call LogEvent('InsertLeave')
  "autocmd InsertCharPre * call LogEvent('InsertCharPre')
  autocmd TextChanged * call LogEvent('TextChanged')
  "autocmd TextChangedI * call LogEvent('TextChangedI')
  autocmd ColorScheme * call LogEvent('ColorScheme')
  autocmd RemoteReply * call LogEvent('RemoteReply')
  autocmd QuickFixCmdPre * call LogEvent('QuickFixCmdPre')
  autocmd QuickFixCmdPost * call LogEvent('QuickFixCmdPost')
  autocmd SessionLoadPost * call LogEvent('SessionLoadPost')
  autocmd MenuPopup * call LogEvent('MenuPopup')
  autocmd CompleteDone * call LogEvent('CompleteDone')
  autocmd User * call LogEvent('User')
augroup END

function! LogEvent(eventName) abort
  silent execute '!echo '.a:eventName.' >> /tmp/vim_event_log'
endfunction

" change window: if the other window has a diffrent buffer: BufLeave, WinLeave, WinEnter, BubEnter
" if the other window has the same buffer: WinLeave, WinEnter
"
" change buf in current window: BufLeave BufWinLeave BufHidden BufEnter BufWinEnter
"
" close window: if the alternative window has a different buffer: BufLeave WinLeave BufWinLeave BufHidden WinEnter BufEnter
"
" create buf in split: BufAdd BufCreate BufLeave BufReadCmd BufEnter BufWinEnter
